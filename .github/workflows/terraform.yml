name: 'Terraform CI'

on:
  push:
    branches:
    - main
  pull_request:

jobs:

  # cicd env
  cicd-create:
    name: 'CICD'
    runs-on: ubuntu-latest
    environment: cicd

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Replace the providers and Variables files to replace the GOOGLE_PROJECT_ID set as Github Actions Variable.
    #
    - name: Replace GOOGLE_PROJECT_ID Providers
      run: sed -i "s/GOOGLE_PROJECT_ID/${GOOGLE_PROJECT_ID}/g" providers.tf
      env:
        GOOGLE_PROJECT_ID: ${{ vars.GOOGLE_PROJECT_ID }}
     
    - name: Replace GOOGLE_PROJECT_ID Variables
      run: sed -i "s/GOOGLE_PROJECT_ID/${GOOGLE_PROJECT_ID}/g" terraform.tfvars
      env:
        GOOGLE_PROJECT_ID: ${{ vars.GOOGLE_PROJECT_ID }}
      
    - name: Replace GITHUB_TOKEN Variables
      run: sed -i "s/GITHUB_TOKEN/${GITHUB_TOKEN}/g" terraform.tfvars
      env:
        GITHUB_TOKEN: ${{ secrets.CREATE_REPO }}

    - name: Replace FLUX_REPO Variables
      run: sed -i "s/FLUX_REPO/${FLUX_REPO}/g" terraform.tfvars
      env:
        FLUX_REPO: ${{ vars.FLUX_REPO }}

    - name: Replace PRIMARY_IP_CIDR Variables
      run: sed -i "s#PRIMARY_IP_CIDR#${PRIMARY_IP_CIDR}#g" terraform.tfvars
      env:
        PRIMARY_IP_CIDR: ${{ vars.PRIMARY_IP_CIDR }}

    - name: Replace SERVICES_IP_CIDR Variables
      run: sed -i "s#SERVICES_IP_CIDR#${SERVICES_IP_CIDR}#g" terraform.tfvars
      env:
        SERVICES_IP_CIDR: ${{ vars.SERVICES_IP_CIDR }}

    - name: Replace PODS_IP_CIDR Variables
      run: sed -i "s#PODS_IP_CIDR#${PODS_IP_CIDR}#g" terraform.tfvars
      env:
        PODS_IP_CIDR: ${{ vars.PODS_IP_CIDR }}
    
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -reconfigure -upgrade
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    # Generates an execution plan for Terraform
    - name: Terraform Apply
      run: terraform apply -var deploy_flux=true -var create_flux_repo=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}


  # daninvisible-me
  me-create:
    name: 'DaninvisibleMe'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Replace the providers and Variables files to replace the GOOGLE_PROJECT_ID set as Github Actions Variable.
    - name: Replace GOOGLE_PROJECT_ID Providers
      run: sed -i "s/GOOGLE_PROJECT_ID/${GOOGLE_PROJECT_ID}/g" providers.tf
      env:
        GOOGLE_PROJECT_ID: ${{ vars.GOOGLE_PROJECT_ID }}
     
    - name: Replace GOOGLE_PROJECT_ID Variables
      run: sed -i "s/GOOGLE_PROJECT_ID/${GOOGLE_PROJECT_ID}/g" terraform.tfvars
      env:
        GOOGLE_PROJECT_ID: ${{ vars.GOOGLE_PROJECT_ID }}

    - name: Replace PRIMARY_IP_CIDR Variables
      run: sed -i "s#PRIMARY_IP_CIDR#${PRIMARY_IP_CIDR}#g" terraform.tfvars
      env:
        PRIMARY_IP_CIDR: ${{ vars.PRIMARY_IP_CIDR }}

    - name: Replace SERVICES_IP_CIDR Variables
      run: sed -i "s#SERVICES_IP_CIDR#${SERVICES_IP_CIDR}#g" terraform.tfvars
      env:
        SERVICES_IP_CIDR: ${{ vars.SERVICES_IP_CIDR }}

    - name: Replace PODS_IP_CIDR Variables
      run: sed -i "s#PODS_IP_CIDR#${PODS_IP_CIDR}#g" terraform.tfvars
      env:
        PODS_IP_CIDR: ${{ vars.PODS_IP_CIDR }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -reconfigure -upgrade
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}